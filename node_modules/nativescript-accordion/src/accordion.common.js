"use strict";
var view_1 = require("ui/core/view");
var proxy_1 = require("ui/core/proxy");
var dependency_observable_1 = require("ui/core/dependency-observable");
var platform_1 = require("platform");
var types = require("utils/types");
var autoEffectiveRowHeight = -1;
var knownCollections;
(function (knownCollections) {
    knownCollections.items = "items";
})(knownCollections = exports.knownCollections || (exports.knownCollections = {}));
var knownTemplates;
(function (knownTemplates) {
    knownTemplates.itemTemplate = "itemTemplate";
    knownTemplates.headerTemplate = "headerTemplate";
    knownTemplates.footerTemplate = "footerTemplate";
})(knownTemplates = exports.knownTemplates || (exports.knownTemplates = {}));
var knownMultiTemplates;
(function (knownMultiTemplates) {
    knownMultiTemplates.itemTemplates = "itemTemplates";
})(knownMultiTemplates = exports.knownMultiTemplates || (exports.knownMultiTemplates = {}));
var AffectsLayout = platform_1.isAndroid ? dependency_observable_1.PropertyMetadataSettings.None : dependency_observable_1.PropertyMetadataSettings.AffectsLayout;
function onHeaderTemplateChanged(data) {
    var accordion = data.object;
    accordion.headerTemplateUpdated(data.oldValue, data.newValue);
}
;
function onItemTemplateChanged(data) {
    var accordion = data.object;
    accordion.templateUpdated(data.oldValue, data.newValue);
}
;
function onFooterTemplateChanged(data) {
    var accordion = data.object;
    accordion.footerTemplateUpdated(data.oldValue, data.newValue);
}
;
function onItemsChanged(data) {
    var accordion = data.object;
    accordion.updateNativeItems(data.oldValue, data.newValue);
}
;
function onSelectedIndexChanged(data) {
    var accordion = data.object;
    if (accordion && accordion.items && types.isNumber(data.newValue)) {
        accordion.updateNativeIndex(data.oldValue, data.newValue);
        accordion.notify({ eventName: Accordion.selectedIndexChangedEvent, object: accordion, oldIndex: data.oldValue, newIndex: data.newValue });
    }
}
;
var Accordion = (function (_super) {
    __extends(Accordion, _super);
    function Accordion() {
        var _this = _super.call(this) || this;
        _this._effectiveRowHeight = autoEffectiveRowHeight;
        return _this;
    }
    Accordion.prototype._getParentData = function (parentIndex) {
        var items = this.items;
        return items.getItem ? items.getItem(parentIndex) : items[parentIndex];
    };
    Accordion.prototype._getChildData = function (parentIndex, childIndex) {
        var items = this.items;
        return items.getItem ? items.getItem(parentIndex)['items'][childIndex] : items[parentIndex]['items'][childIndex];
    };
    Object.defineProperty(Accordion.prototype, "headerTextBold", {
        get: function () {
            return this._headerTextBold;
        },
        set: function (value) {
            this._headerTextBold = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "headerHeight", {
        get: function () {
            return this._headerHeight;
        },
        set: function (value) {
            this._headerHeight = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "headerTextColor", {
        get: function () {
            return this._headerTextColor;
        },
        set: function (value) {
            this._headerTextColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "headerColor", {
        get: function () {
            return this._headerColor;
        },
        set: function (value) {
            this._headerColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "headerTextAlignment", {
        get: function () {
            return this._headerTextAlignment;
        },
        set: function (value) {
            this._headerTextAlignment = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "headerTextSize", {
        get: function () {
            return this._headerTextSize;
        },
        set: function (value) {
            this._headerTextSize = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "footerTextBold", {
        get: function () {
            return this._footerTextBold;
        },
        set: function (value) {
            this._footerTextBold = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "footerHeight", {
        get: function () {
            return this._footerHeight;
        },
        set: function (value) {
            this._footerHeight = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "footerTextColor", {
        get: function () {
            return this._footerTextColor;
        },
        set: function (value) {
            this._footerTextColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "footerColor", {
        get: function () {
            return this._footerColor;
        },
        set: function (value) {
            this._footerColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "footerTextAlignment", {
        get: function () {
            return this._footerTextAlignment;
        },
        set: function (value) {
            this._footerTextAlignment = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "footerTextSize", {
        get: function () {
            return this._footerTextSize;
        },
        set: function (value) {
            this._footerTextSize = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "items", {
        get: function () {
            return this._getValue(Accordion.itemsProperty);
        },
        set: function (value) {
            this._setValue(Accordion.itemsProperty, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "headerTemplate", {
        get: function () {
            return this._getValue(Accordion.headerTemplateProperty);
        },
        set: function (value) {
            this._setValue(Accordion.headerTemplateProperty, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "itemTemplate", {
        get: function () {
            return this._getValue(Accordion.itemTemplateProperty);
        },
        set: function (value) {
            this._setValue(Accordion.itemTemplateProperty, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "footerTemplate", {
        get: function () {
            return this._getValue(Accordion.footerTemplateProperty);
        },
        set: function (value) {
            this._setValue(Accordion.footerTemplateProperty, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "selectedIndex", {
        get: function () {
            return this._getValue(Accordion.selectedIndexProperty);
        },
        set: function (value) {
            this._setValue(Accordion.selectedIndexProperty, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "selectedIndexes", {
        get: function () {
            return this._selectedIndexes;
        },
        set: function (indexes) {
            this._selectedIndexes = indexes;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "allowMultiple", {
        get: function () {
            return this._allowMultiple;
        },
        set: function (value) {
            this._allowMultiple = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Accordion.prototype, "separatorColor", {
        get: function () {
            return this._separatorColor;
        },
        set: function (value) {
            this._separatorColor = value;
        },
        enumerable: true,
        configurable: true
    });
    return Accordion;
}(view_1.View));
Accordion.headerTemplateProperty = new dependency_observable_1.Property("headerTemplate", "Accordion", new proxy_1.PropertyMetadata(undefined, AffectsLayout, onHeaderTemplateChanged));
Accordion.itemTemplateProperty = new dependency_observable_1.Property("itemTemplate", "Accordion", new proxy_1.PropertyMetadata(undefined, AffectsLayout, onItemTemplateChanged));
Accordion.footerTemplateProperty = new dependency_observable_1.Property("footerTemplate", "Accordion", new proxy_1.PropertyMetadata(undefined, AffectsLayout, onFooterTemplateChanged));
Accordion.itemsProperty = new dependency_observable_1.Property("items", "Accordion", new proxy_1.PropertyMetadata(undefined, AffectsLayout, null, null, onItemsChanged));
Accordion.selectedIndexProperty = new dependency_observable_1.Property("selectedIndex", "Accordion", new proxy_1.PropertyMetadata(undefined, dependency_observable_1.PropertyMetadataSettings.None, null, null, onSelectedIndexChanged));
Accordion.selectedIndexChangedEvent = "selectedIndexChanged";
exports.Accordion = Accordion;
//# sourceMappingURL=accordion.common.js.map